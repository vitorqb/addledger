// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_statement is a generated GoMock package.
package mock_statement

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// DiscardStatementEntry mocks base method.
func (m *MockController) DiscardStatementEntry(index int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DiscardStatementEntry", index)
}

// DiscardStatementEntry indicates an expected call of DiscardStatementEntry.
func (mr *MockControllerMockRecorder) DiscardStatementEntry(index interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiscardStatementEntry", reflect.TypeOf((*MockController)(nil).DiscardStatementEntry), index)
}

// HideModal mocks base method.
func (m *MockController) HideModal() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HideModal")
}

// HideModal indicates an expected call of HideModal.
func (mr *MockControllerMockRecorder) HideModal() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HideModal", reflect.TypeOf((*MockController)(nil).HideModal))
}

// LoadRequest mocks base method.
func (m *MockController) LoadRequest() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LoadRequest")
}

// LoadRequest indicates an expected call of LoadRequest.
func (mr *MockControllerMockRecorder) LoadRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadRequest", reflect.TypeOf((*MockController)(nil).LoadRequest))
}
