// Code generated by MockGen. DO NOT EDIT.
// Source: metaloader.go

// Package mock_metaloader is a generated GoMock package.
package mock_metaloader

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIMetaLoader is a mock of IMetaLoader interface.
type MockIMetaLoader struct {
	ctrl     *gomock.Controller
	recorder *MockIMetaLoaderMockRecorder
}

// MockIMetaLoaderMockRecorder is the mock recorder for MockIMetaLoader.
type MockIMetaLoaderMockRecorder struct {
	mock *MockIMetaLoader
}

// NewMockIMetaLoader creates a new mock instance.
func NewMockIMetaLoader(ctrl *gomock.Controller) *MockIMetaLoader {
	mock := &MockIMetaLoader{ctrl: ctrl}
	mock.recorder = &MockIMetaLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMetaLoader) EXPECT() *MockIMetaLoaderMockRecorder {
	return m.recorder
}

// LoadAccounts mocks base method.
func (m *MockIMetaLoader) LoadAccounts() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadAccounts")
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadAccounts indicates an expected call of LoadAccounts.
func (mr *MockIMetaLoaderMockRecorder) LoadAccounts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadAccounts", reflect.TypeOf((*MockIMetaLoader)(nil).LoadAccounts))
}

// LoadTransactions mocks base method.
func (m *MockIMetaLoader) LoadTransactions() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadTransactions")
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadTransactions indicates an expected call of LoadTransactions.
func (mr *MockIMetaLoaderMockRecorder) LoadTransactions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadTransactions", reflect.TypeOf((*MockIMetaLoader)(nil).LoadTransactions))
}
