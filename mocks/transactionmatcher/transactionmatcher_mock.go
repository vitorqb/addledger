// Code generated by MockGen. DO NOT EDIT.
// Source: transactionmatcher.go

// Package mock_transactionmatcher is a generated GoMock package.
package mock_transactionmatcher

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	journal "github.com/vitorqb/addledger/internal/journal"
)

// MockITransactionMatcher is a mock of ITransactionMatcher interface.
type MockITransactionMatcher struct {
	ctrl     *gomock.Controller
	recorder *MockITransactionMatcherMockRecorder
}

// MockITransactionMatcherMockRecorder is the mock recorder for MockITransactionMatcher.
type MockITransactionMatcherMockRecorder struct {
	mock *MockITransactionMatcher
}

// NewMockITransactionMatcher creates a new mock instance.
func NewMockITransactionMatcher(ctrl *gomock.Controller) *MockITransactionMatcher {
	mock := &MockITransactionMatcher{ctrl: ctrl}
	mock.recorder = &MockITransactionMatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITransactionMatcher) EXPECT() *MockITransactionMatcherMockRecorder {
	return m.recorder
}

// Match mocks base method.
func (m *MockITransactionMatcher) Match() []journal.Transaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Match")
	ret0, _ := ret[0].([]journal.Transaction)
	return ret0
}

// Match indicates an expected call of Match.
func (mr *MockITransactionMatcherMockRecorder) Match() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Match", reflect.TypeOf((*MockITransactionMatcher)(nil).Match))
}

// SetDescriptionInput mocks base method.
func (m *MockITransactionMatcher) SetDescriptionInput(x string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDescriptionInput", x)
}

// SetDescriptionInput indicates an expected call of SetDescriptionInput.
func (mr *MockITransactionMatcherMockRecorder) SetDescriptionInput(x interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDescriptionInput", reflect.TypeOf((*MockITransactionMatcher)(nil).SetDescriptionInput), x)
}

// SetTransactionHistory mocks base method.
func (m *MockITransactionMatcher) SetTransactionHistory(x []journal.Transaction) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTransactionHistory", x)
}

// SetTransactionHistory indicates an expected call of SetTransactionHistory.
func (mr *MockITransactionMatcherMockRecorder) SetTransactionHistory(x interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTransactionHistory", reflect.TypeOf((*MockITransactionMatcher)(nil).SetTransactionHistory), x)
}
