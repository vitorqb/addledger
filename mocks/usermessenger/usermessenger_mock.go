// Code generated by MockGen. DO NOT EDIT.
// Source: usermessenger.go

// Package mock_usermessenger is a generated GoMock package.
package mock_usermessenger

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUserMessenger is a mock of IUserMessenger interface.
type MockIUserMessenger struct {
	ctrl     *gomock.Controller
	recorder *MockIUserMessengerMockRecorder
}

// MockIUserMessengerMockRecorder is the mock recorder for MockIUserMessenger.
type MockIUserMessengerMockRecorder struct {
	mock *MockIUserMessenger
}

// NewMockIUserMessenger creates a new mock instance.
func NewMockIUserMessenger(ctrl *gomock.Controller) *MockIUserMessenger {
	mock := &MockIUserMessenger{ctrl: ctrl}
	mock.recorder = &MockIUserMessengerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserMessenger) EXPECT() *MockIUserMessengerMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *MockIUserMessenger) Error(msg string, err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Error", msg, err)
}

// Error indicates an expected call of Error.
func (mr *MockIUserMessengerMockRecorder) Error(msg, err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockIUserMessenger)(nil).Error), msg, err)
}

// Info mocks base method.
func (m *MockIUserMessenger) Info(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Info", arg0)
}

// Info indicates an expected call of Info.
func (mr *MockIUserMessengerMockRecorder) Info(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockIUserMessenger)(nil).Info), arg0)
}

// Warning mocks base method.
func (m *MockIUserMessenger) Warning(msg string, err error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Warning", msg, err)
}

// Warning indicates an expected call of Warning.
func (mr *MockIUserMessengerMockRecorder) Warning(msg, err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Warning", reflect.TypeOf((*MockIUserMessenger)(nil).Warning), msg, err)
}
